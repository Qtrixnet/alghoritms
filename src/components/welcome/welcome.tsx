import './welcome.scss';

const Welcome = () => {
  return (
    <div className="welcome">
      <h1 className="welcome__title">Визуализатор алгоритмов сортировки</h1>
      <h2 className="welcome__subtitle">Алгоритмы сортировки:</h2>
      <p className="welcome__text">Используются для сортировки структуры данных в соответствии с определенным отношением
        порядка, например числовым порядком или лексикографическим порядком.</p>
      <p className="welcome__text">Эта операция является одной из самых важных и распространенных в информатике. Уже давно разрабатываются новые
        методы, позволяющие сделать эту процедуру все быстрее и быстрее.</p>
      <p className="welcome__text">В настоящее время существуют сотни различных алгоритмов сортировки, каждый из которых имеет свои особенности. Они классифицируются по двум показателям: <span className="welcome__text--accent">пространственной</span> и <span className="welcome__text--accent">временной</span> сложности.</p>
      <p className="welcome__text">Эти два вида сложности представлены асимптотическими обозначениями, в основном символами O, Θ , Ω,
        представляющими соответственно верхнюю границу, точную границу и нижнюю границу сложности алгоритма, определяя в
        скобках выражение через n - количество элементов структуры данных.
      </p>
      <p className="welcome__text">Большинство из них можно разделить на две категории:</p>
      <ol className="welcome__list">
        <li className="welcome__list-item">
          <h3 className="welcome__list-title">Логарифмическая</h3>
          <p className="welcome__list-text">Сложность пропорциональна двоичному логарифму (т.е. основанию 2) числа n.</p>
          <p className="welcome__list-text">Примером алгоритма логарифмической сортировки является быстрая сортировка с пространственной и временной
            сложностью O(n × log n).</p>
        </li>
        <li className="welcome__list-item">
          <h3 className="welcome__list-title">Квадратичная</h3>
          <p className="welcome__list-text">Сложность пропорциональна квадрату n.</p>
          <p className="welcome__list-text">Примером алгоритма квадратичной сортировки является сортировка пузырьком с временной сложностью O.(n2)</p>
        </li>
      </ol>
      <p className="welcome__text">Сложность пространства и времени также можно разделить на 3 разных случая: лучший, средний и худший случай.</p>
      <p className="welcome__text welcome__text--accent">Алгоритмы сортировки могут быть трудными для понимания. Визуализация алгоритмов сортировки может быть отличным способом лучше понять их работу, развлекайтесь!</p>
    </div>
  );
};

export default Welcome;
